#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// DEFINIÇÕES
#define endereco  0x27 // Endereços comuns: 0x27, 0x3F
#define colunas   16
#define linhas    2

// INSTANCIANDO OBJETOS
LiquidCrystal_I2C lcd(endereco, colunas, linhas);

const int potX = A0; 
const int potY = A1;
const int LED_X = 5;
const int LED_Y = 6;

int cont = 0;

void setup() {
  lcd.init(); // INICIA A COMUNICAÇÃO COM O DISPLAY
  lcd.backlight(); // LIGA A ILUMINAÇÃO DO DISPLAY
  lcd.clear(); // LIMPA O DISPLAY

  delay(100); // DELAY DE 5 SEGUNDOS
  lcd.setCursor(0, 1); // POSICIONA O CURSOR NA PRIMEIRA COLUNA DA LINHA 2
  delay(100); // DELAY DE 5 SEGUNDOS
  
  lcd.noBacklight(); // DESLIGA A ILUMINAÇÃO DO DISPLAY
  delay(100); // DELAY DE 2 SEGUNDOS
  lcd.backlight(); // LIGA A ILUMINAÇÃO DO DISPLAY
  delay(100); // DELAY DE 2 SEGUNDOS
  
  lcd.clear(); // LIMPA O DISPLAY
 
  Wire.begin();
  Serial.begin(9600);
  Serial.println("\nI2C Scanner");
  
    pinMode(potX, INPUT);
    pinMode(potY, INPUT);
  	pinMode(6, OUTPUT);
  	pinMode(5, OUTPUT);
}

void loop() {
    byte error, address;
    int nDevices;
    nDevices = 0;

    int ex = analogRead(potX);
    int ey = analogRead(potY);
  
  	int ledXValue = map(ex, 0, 1023, 0, 255);
    int ledYValue = map(ey, 0, 1023, 0, 255);

    if (ex < 500) {
        lcd.setCursor(0, 0);
        lcd.print("Esquerda");
    } 
  	if (ex > 522) {
        lcd.setCursor(0, 0);
        lcd.print(" Direita");
    } 
  	
  	if(ex> 500 && ex < 522){
        lcd.setCursor(0, 0);
        lcd.print("  Parado");
    }

    if (ey < 500) {		
        lcd.setCursor(0, 1);
        lcd.print("  Baixo");      
    } 
  
  	if (ey > 522){ 	
        lcd.setCursor(0, 1);
        lcd.print("   Cima");
    } 
  	
  	if(ey > 500 && ey <522){     	
        lcd.setCursor(0, 1);
        lcd.print(" Parado");
    }
  
 	analogWrite(LED_Y, ledXValue);
 	analogWrite(LED_X, ledYValue);
  
}
